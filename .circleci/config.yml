version: 2.1

orbs:
  orb-tools: circleci/orb-tools@10.0
  aws-ecr: circleci/aws-ecr@<<pipeline.parameters.dev-orb-version>>

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

executors:
  amd64:
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
  arm64:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium

jobs:
  pre-integration-checkout-workspace-job:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: [sample/Dockerfile]

  tag-ecr-image:
    docker:
      - image: cimg/base:stable
    parameters:
      repo:
        type: string
      source-tag:
        type: string
      target-tag:
        type: string
    steps:
      - aws-ecr/ecr-login
      - aws-ecr/tag-image:
          repo: <<parameters.repo>>
          source-tag: <<parameters.source-tag>>
          target-tag: <<parameters.target-tag>>

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint

      - orb-tools/pack:
          requires: [orb-tools/lint]

      - orb-tools/publish-dev:
          context: orb-publisher
          orb-name: circleci/aws-ecr
          requires: [orb-tools/pack]

      - orb-tools/trigger-integration-tests-workflow:
          context: orb-publisher
          requires: [orb-tools/publish-dev]

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - pre-integration-checkout-workspace-job:
          name: pre-integration

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-default-profile-<<matrix.platform>>
      #     attach-workspace: true
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.platform>>
      #     create-repo: true
      #     context: [CPE_ORBS_AWS]
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     executor: amd64
      #     public-registry: true
      #     post-steps:
      #       - run: aws ecr-public delete-repository --repository-name --region us-east-1 aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.platform>> --force
      #     matrix:
      #       parameters:
      #         platform: ["linux/arm64", "linux/amd64"]
      #     requires: [pre-integration]

      - aws-ecr/build-and-push-image:
          name: integration-tests-named-profile
          attach-workspace: true
          context: [CPE_ORBS_AWS]
          workspace-root: workspace
          profile-name: testing
          repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-named-profile
          create-repo: true
          tag: integration,myECRRepoTag
          dockerfile: sample/Dockerfile
          path: workspace
          extra-build-args: --compress
          region: us-west-2
          executor: amd64
          requires: [pre-integration]

      - tag-ecr-image:
          name: integration-tests-tag-existing-image
          repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-named-profile
          context: [CPE_ORBS_AWS]
          source-tag: integration
          target-tag: latest
          region: us-west-2
          post-steps:
            - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-named-profile
          requires:
            - integration-tests-named-profile

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-skip-when-tags-exist-populate-image-<<matrix.executor>>
      #     attach-workspace: true
      #     context: [CPE_ORBS_AWS]
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>>
      #     create-repo: true
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     skip-when-tags-exist: true
      #     region: us-west-2
      #     matrix:
      #       parameters:
      #         executor: ["amd64", "arm64"]
      #     requires: [pre-integration]

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-skip-when-tags-exist-<<matrix.executor>>
      #     attach-workspace: true
      #     context: [CPE_ORBS_AWS]
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>>
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     skip-when-tags-exist: true
      #     aws-cli-version: 2.4.10
      #     region: us-west-2
      #     post-steps:
      #       - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>> --force
      #     matrix:
      #       parameters:
      #         executor: ["amd64", "arm64"]
      #     requires:
      #       - integration-tests-skip-when-tags-exist-populate-image-amd64
      #       - integration-tests-skip-when-tags-exist-populate-image-arm64

      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/aws-ecr
          context: orb-publisher
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: orb-publisher
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: 6f:16:49:d2:97:35:10:43:bc:a6:3f:f8:62:89:1f:42
          filters:
            branches:
              only: master
          requires:
            # - integration-tests-default-profile-linux/arm64
            # - integration-tests-default-profile-linux/amd64
            - integration-tests-named-profile
            - integration-tests-tag-existing-image
            # - integration-tests-skip-when-tags-exist-amd64
            # - integration-tests-skip-when-tags-exist-arm64
