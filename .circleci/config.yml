version: 2.1

orbs:
  orb-tools: circleci/orb-tools@10.0
  aws-ecr: circleci/aws-ecr@<<pipeline.parameters.dev-orb-version>>

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

executors:
  ubuntu:
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
  arm64:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium

jobs:
  pre-integration-checkout-workspace-job:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: [sample/Dockerfile]

  # build-and-push-to-many-regions:
  #   executor: ubuntu
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - aws-ecr/create-repo:
  #         profile-name: default
  #     - aws-ecr/build-image:
  #         repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-multi-region
  #         tag: multi-region
  #         dockerfile: sample/Dockerfile
  #         path: workspace
  #     - aws-ecr/push-image:
  #         repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-multi-region
  #         tag: multi-region
  #         matrix:
  #           parameters:
  #             region: ["us-west-1", "us-west-2"]
  #         post-steps:
  #           - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-multi-region --force

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint

      - orb-tools/pack:
          requires: [orb-tools/lint]

      - orb-tools/publish-dev:
          context: orb-publisher
          orb-name: circleci/aws-ecr
          requires: [orb-tools/pack]

      - orb-tools/trigger-integration-tests-workflow:
          context: orb-publisher
          requires: [orb-tools/publish-dev]

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - pre-integration-checkout-workspace-job:
          name: pre-integration

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-default-multi-region
      #     attach-workspace: true
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-multi-region
      #     create-repo: true
      #     tag: multi-region
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     post-steps:
      #       - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-multi-region --force
      #     executor: ubuntu
      #     requires: [pre-integration]

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-default-profile-<<matrix.executor>>
      #     attach-workspace: true
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.executor>>
      #     create-repo: true
      #     context: [CPE_ORBS_AWS]
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     post-steps:
      #       - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.executor>> --force
      #     matrix:
      #       parameters:
      #         executor: ["ubuntu"]
      #     requires: [pre-integration]

      - aws-ecr/build-and-push-image:
          name: integration-tests-default-profile-<<matrix.executor>>
          attach-workspace: true
          workspace-root: workspace
          repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.executor>>
          create-repo: true
          context: [CPE_ORBS_AWS]
          tag: integration,myECRRepoTag
          dockerfile: sample/Dockerfile
          path: workspace
          extra-build-args: --compress
          platform: linux/arm64
          # post-steps:
          #   - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-default-profile-<<matrix.executor>> --force
          matrix:
            parameters:
              executor: ["arm64"]
          requires: [pre-integration]

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-named-profile-<<matrix.executor>>
      #     attach-workspace: true
      #     context: [CPE_ORBS_AWS]
      #     workspace-root: workspace
      #     profile-name: testing
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-named-profile-<<matrix.executor>>
      #     create-repo: true
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     post-steps:
      #       - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-named-profile-<<matrix.executor>> --force
      #     matrix:
      #       parameters:
      #         executor: ["ubuntu", "arm64"]
      #     requires: [pre-integration]

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-skip-when-tags-exist-populate-image-<<matrix.executor>>
      #     attach-workspace: true
      #     context: [CPE_ORBS_AWS]
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>>
      #     create-repo: true
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     skip-when-tags-exist: true
      #     matrix:
      #       parameters:
      #         executor: ["ubuntu", "arm64"]
      #     requires: [pre-integration]

      # - aws-ecr/build-and-push-image:
      #     name: integration-tests-skip-when-tags-exist-<<matrix.executor>>
      #     attach-workspace: true
      #     context: [CPE_ORBS_AWS]
      #     workspace-root: workspace
      #     repo: aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>>
      #     tag: integration,myECRRepoTag
      #     dockerfile: sample/Dockerfile
      #     path: workspace
      #     extra-build-args: --compress
      #     skip-when-tags-exist: true
      #     aws-cli-version: 2.4.10
      #     post-steps:
      #       - run: aws ecr delete-repository --repository-name aws-ecr-orb-${CIRCLE_SHA1:0:7}-skip-when-tags-exist-<<matrix.executor>> --force
      #     matrix:
      #       parameters:
      #         executor: ["ubuntu", "arm64"]
      #     requires:
      #       - integration-tests-skip-when-tags-exist-populate-image-ubuntu
      #       - integration-tests-skip-when-tags-exist-populate-image-arm64

      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/aws-ecr
          context: orb-publisher
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: orb-publisher
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: 6f:16:49:d2:97:35:10:43:bc:a6:3f:f8:62:89:1f:42
          filters:
            branches:
              only: master
          requires:
            # - integration-tests-default-profile-ubuntu
            # - integration-tests-named-profile-ubuntu
            # - integration-tests-skip-when-tags-exist-ubuntu
            - integration-tests-default-profile-arm64
            # - integration-tests-named-profile-arm64
            # - integration-tests-skip-when-tags-exist-arm64
