description: "Build a docker image"

parameters:
  account-id:
    type: string
    default: AWS_ECR_ACCOUNT_ID
    description: >
      The 12 digit AWS id associated with the ECR account.
      defaults to AWS_ECR_ACCOUNT_ID

  repo:
    type: string
    description: Name of an Amazon ECR repository

  tag:
    type: string
    default: "latest"
    description: A comma-separated string containing docker image tags (default = latest)

  dockerfile:
    type: string
    default: Dockerfile
    description: Name of dockerfile to use. Defaults to Dockerfile.

  path:
    type: string
    default: .
    description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).

  no-output-timeout:
    type: string
    default: 10m
    description: The amount of time to allow the docker command to run before timing out.

  extra-build-args:
    type: string
    default: ""
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build

  checkout:
    type: boolean
    default: false
    description: >
      Boolean for whether or not to checkout as a first step. Default is false.

  ecr-login:
    type: boolean
    default: false
    description: >
      Boolean for whether or not to log in to ECR before building. Default is false.

  skip-when-tags-exist:
    type: boolean
    default: false
    description: Whether to skip image building if all specified tags already exist in ECR

  region:
    type: env_var_name
    default: AWS_REGION
    description: >
      Name of env var storing your AWS region information,
      defaults to AWS_REGION. Only required when skip-when-tags-exist
      or ecr-login are set to true.

  # role-arn:
  #   type: string
  #   default: ""
  #   description: Role ARN that the profile should take.

  profile-name:
    type: string
    default: "default"
    description: >
      AWS profile name to be configured. Only required when skip-when-tags-exist
      or ecr-login are set to true.

  aws-access-key-id:
    type: env_var_name
    default: AWS_ACCESS_KEY_ID
    description: >
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_ACCESS_KEY.

  aws-secret-access-key:
    type: env_var_name
    default: AWS_SECRET_ACCESS_KEY
    description: >
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_SECRET_ACCESS_KEY.

  public-registry:
    type: boolean
    description: Set to true if building and pushing an image to a Public Registry on ECR.
    default: false

  platform:
    type: string
    default: "linux/amd64"
    description: Platform targets for the docker image, multi arch images. Ex. linux/amd64,linux/arm64

steps:
  - checkout

  - when:
      condition:
        or:
          - <<parameters.ecr-login>>
          - <<parameters.skip-when-tags-exist>>
      steps:
        - ecr-login:
            profile-name: <<parameters.profile-name>>
            region: <<parameters.region>>
            aws-access-key-id: <<parameters.aws-access-key-id>>
            aws-secret-access-key: <<parameters.aws-secret-access-key>>
            # role-arn: <<parameters.role-arn>>
            public-registry: <<parameters.public-registry>>

  - run:
      name: Build Docker Image
      environment:
        PARAM_TAG: << parameters.tag >>
        PARAM_SKIP_WHEN_TAGS_EXIST: <<parameters.skip-when-tags-exist>>
        PARAM_REPO: << parameters.repo >>
        PARAM_EXTRA_BUILD_ARGS: <<parameters.extra-build-args>>
        PARAM_PATH: <<parameters.path>>
        PARAM_DOCKERFILE: <<parameters.dockerfile>>
        PARAM_PROFILE_NAME: <<parameters.profile-name>>
        PARAM_ACCOUNT_ID: <<parameters.account-id>>
        PARAM_REGION: <<parameters.region>>
        PARAM_PLATFORM: <<parameters.platform>>
        PARAM_PUBLIC_REGISTRY: <<parameters.public-registry>>
      command: <<include(scripts/build-image.sh)>>
      no_output_timeout: <<parameters.no-output-timeout>>
