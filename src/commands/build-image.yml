description: "Build a docker image"

parameters:
  account-url:
    type: env_var_name
    default: AWS_ECR_ACCOUNT_URL
    description: >
      The Amazon ECR account URL that maps to an AWS account,
      e.g. {awsAccountNum}.dkr.ecr.us-west-2.amazonaws.com

  repo:
    type: string
    description: Name of an Amazon ECR repository

  tag:
    type: string
    default: "latest"
    description: A comma-separated string containing docker image tags (default = latest)

  dockerfile:
    type: string
    default: Dockerfile
    description: Name of dockerfile to use. Defaults to Dockerfile.

  path:
    type: string
    default: .
    description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).

  no-output-timeout:
    type: string
    default: 10m
    description: The amount of time to allow the docker command to run before timing out.

  extra-build-args:
    type: string
    default: ""
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build

  checkout:
    type: boolean
    default: false
    description: >
      Boolean for whether or not to checkout as a first step. Default is false.

  ecr-login:
    type: boolean
    default: false
    description: >
      Boolean for whether or not to log in to ECR before building. Default is false.

  skip-when-tags-exist:
    type: boolean
    default: false
    description: Whether to skip image building if all specified tags already exist in ECR

  region:
    type: env_var_name
    default: AWS_DEFAULT_REGION
    description: >
      Name of env var storing your AWS region information,
      defaults to AWS_DEFAULT_REGION. Only required when skip-when-tags-exist
      or ecr-login are set to true.

  profile-name:
    type: string
    default: "default"
    description: >
      AWS profile name to be configured. Only required when skip-when-tags-exist
      or ecr-login are set to true.

  aws-access-key-id:
    type: env_var_name
    default: AWS_ACCESS_KEY_ID
    description: >
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_ACCESS_KEY.

  aws-secret-access-key:
    type: env_var_name
    default: AWS_SECRET_ACCESS_KEY
    description: >
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_SECRET_ACCESS_KEY.

steps:
  - when:
      condition: <<parameters.checkout>>
      steps:
        - checkout

  - when:
      condition:
        or:
          - <<parameters.ecr-login>>
          - <<parameters.skip-when-tags-exist>>
      steps:
        - ecr-login:
            profile-name: <<parameters.profile-name>>
            region: <<parameters.region>>
            account-url: <<parameters.account-url>>
            aws-access-key-id: <<parameters.aws-access-key-id>>
            aws-secret-access-key: <<parameters.aws-secret-access-key>>

  - run:
      name: Build docker image
      command: |
        registry_id=$(echo $<<parameters.account-url>> | sed "s;\..*;;g")
        number_of_tags_in_ecr=0

        docker_tag_args=""
        IFS="," read -ra DOCKER_TAGS \<<< "<< parameters.tag >>"
        for tag in "${DOCKER_TAGS[@]}"; do
          if [ "<<parameters.skip-when-tags-exist>>" = "true" ]; then
            docker_tag_exists_in_ecr=$(aws ecr describe-images --profile <<parameters.profile-name>> --registry-id $registry_id --repository-name <<parameters.repo>> --query "contains(imageDetails[].imageTags[], '$tag')")
            if [ "$docker_tag_exists_in_ecr" = "true" ]; then
              docker pull $<<parameters.account-url>>/<<parameters.repo>>:${tag}
              let "number_of_tags_in_ecr+=1"
            fi
          fi
          docker_tag_args="$docker_tag_args -t $<<parameters.account-url>>/<<parameters.repo>>:$tag"
        done
        if [ "<<parameters.skip-when-tags-exist>>" = "false" ] || [ "<<parameters.skip-when-tags-exist>>" = "true" -a $number_of_tags_in_ecr -lt ${#DOCKER_TAGS[@]} ]; then
          docker build \
            <<#parameters.extra-build-args>><<parameters.extra-build-args>><</parameters.extra-build-args>> \
            -f <<parameters.path>>/<<parameters.dockerfile>> \
            $docker_tag_args \
            <<parameters.path>>
        fi
      no_output_timeout: <<parameters.no-output-timeout>>


