description: "Build a docker image with Docker Buildx"

parameters:
  registry-id:
    type: env_var_name
    default: AWS_ECR_REGISTRY_ID
    description: >
      The 12 digit AWS Registry ID associated with the ECR account.
      This field is required

  repo:
    type: string
    description: Name of an Amazon ECR repository

  tag:
    type: string
    default: "latest"
    description: A comma-separated string containing docker image tags (default = latest)

  dockerfile:
    type: string
    default: Dockerfile
    description: Name of dockerfile to use. Defaults to Dockerfile.

  path:
    type: string
    default: .
    description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).

  no-output-timeout:
    type: string
    default: 10m
    description: The amount of time to allow the docker command to run before timing out.

  extra-build-args:
    type: string
    default: ""
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/buildx

  skip-when-tags-exist:
    type: boolean
    default: false
    description: Whether to skip image building if all specified tags already exist in ECR

  region:
    type: string
    default: ${AWS_REGION}
    description: >
      AWS region of ECR repository. Defaults to environment variable ${AWS_REGION}

  profile-name:
    type: string
    default: "default"
    description: >
      AWS profile name to be configured. Only required when skip-when-tags-exist
      or ecr-login are set to true.

  public-registry:
    type: boolean
    description: Set to true if building and pushing an image to a Public Registry on ECR.
    default: false

  platform:
    type: string
    default: "linux/amd64"
    description: Platform targets for the docker image, multi arch images. Ex. linux/amd64,linux/arm64.

  push-image:
    type: boolean
    default: true
    description: Set to false to build an image without pushing to repository.  Defaults to true.

  lifecycle-policy-path:
    type: string
    default: ""
    description: |
      The path to the .json file containing the lifecycle policy to be applied to a specified repository in AWS ECR.

steps:
  - run:
      name: Build Docker Image with buildx
      environment:
        PARAM_TAG: << parameters.tag >>
        PARAM_SKIP_WHEN_TAGS_EXIST: <<parameters.skip-when-tags-exist>>
        PARAM_REPO: << parameters.repo >>
        PARAM_EXTRA_BUILD_ARGS: <<parameters.extra-build-args>>
        PARAM_PATH: <<parameters.path>>
        PARAM_DOCKERFILE: <<parameters.dockerfile>>
        PARAM_PROFILE_NAME: <<parameters.profile-name>>
        PARAM_REGISTRY_ID: <<parameters.registry-id>>
        PARAM_REGION: <<parameters.region>>
        PARAM_PLATFORM: <<parameters.platform>>
        PARAM_PUBLIC_REGISTRY: <<parameters.public-registry>>
        PARAM_PUSH_IMAGE: <<parameters.push-image>>
        PARAM_LIFECYCLE_POLICY_PATH: <<parameters.lifecycle-policy-path>>
      command: <<include(scripts/docker-buildx.sh)>>
      no_output_timeout: <<parameters.no-output-timeout>>
