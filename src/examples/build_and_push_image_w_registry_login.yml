description: >
  In some cases, images being built using the build_and_push_image job need to pull a custom
  Docker image from a container registry like DockerHub, Heroku or GitHub Container Registry.
  This requires users to log into these registries first before the images can be built.
  This is an example of a using the build_and_push_image job with a custom registry login step.
  NOTE: The container_registry_login parameter must be set to true. Registry usernames and passwords
  are stored as environment variables in CircleCI with this example.

usage:
  version: 2.1

  orbs:
    aws-ecr: circleci/aws-ecr@9.0
    # importing aws-cli orb is required for authentication
    aws-cli: circleci/aws-cli@4.0
workflows:
  build-and-push-image-with-container-registry-login:
    jobs:
      - aws-ecr/build_and_push_image:
          # must set container registry login to true
          container_registry_login: true
          container_registry_login_step:
            # custom login step for heroku.
            - run: docker login -u ${HEROKU_USERNAME} -p ${HEROKU_API_KEY}
            # custom login step for GitHub Container Registry.
            - run: docker login -u ${GITHUB_USERNAME} -p ${GITHUB_TOKEN}
            # custom login step for DockerHub.
            - run: docker login -u ${DOCKERHUB_ID} -p ${DOCKERHUB_PASSWORD}
          auth:
            - aws-cli/setup:
                role_arn: arn:aws:iam::123456789012
          repo: my-sample-repo
          tag: sampleTag
          dockerfile: Dockerfile
          path: .
          region: us-west-2
