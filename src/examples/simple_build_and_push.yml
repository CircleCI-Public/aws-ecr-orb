description: >
  Log into AWS, build and push image to Amazon ECR using OIDC for authentication.
  Import the aws-cli orb and authenticate using the aws-cli/setup command with a valid role-arn for OIDC authentication.

usage:
  version: 2.1

  orbs:
    aws-ecr: circleci/aws-ecr@9.0
    # Importing aws-cli orb is required
    aws-cli: circleci/aws-cli@4.0

  executors:
    base:
      docker:
        image: cimg/base:current

  workflows:
    build_and_push_image:
      jobs:
        # build and push image to ECR
        - aws-ecr/build_and_push_image:
            auth:
               # Add authentication step with OIDC using aws-cli/setup command
              - aws-cli/setup:
                  profile: "OIDC-USER"
                  role_arn: "arn:aws:iam::123456789012:role/VALID_OIDC_ECR_ROLE"

            # Must use same profile configured in aws-cli/setup command
            profile_name: "OIDC-User"

            # Select executor defined above
            executors: base

            # name of your ECR repository
            repo: myECRRepository

            # set this to true to create the repository if it does not already exist, defaults to "false"
            create_repo: true

            # Must use valid CircleCI context for OIDC authentication
            context: CircleCI_OIDC_Token

            #Your AWS region
            region: ${AWS_DEFAULT_REGION}

            # Your AWS account ID. use ${variable_name} if stored as an environment variable \
            account_id: ${AWS_ACCOUNT_ID}

            # ECR image tags (comma separated string), defaults to "latest"
            tag: latest,myECRRepoTag

            # name of Dockerfile to use, defaults to "Dockerfile"
            dockerfile: myDockerfile

            # path to Dockerfile, defaults to . (working directory)
            path: pathToMyDockerfile

            # Boolean value if pushing to public registry. Defaults to true.
            public_registry: false

            # Security scans repository on push.  Defaults to true.
            repo_scan_on_push: true

            # The amount of time to allow the docker build command to run before timing out, defaults to "10m"
            no_output_timeout: 20m

            # Extra docker buildx build arguments
            extra_build_args: --compress

            # Specify platform targets for built docker image.
            platform: linux/amd64

            # Push image to repository after building.  Defaults to true
            push_image: true

            # Set to true if you don't want to build the image if it already exists in the ECR repo, for example when
            # you are tagging with the git commit hash. Specially useful for faster code reverts.
            skip_when_tags_exist: false

            # set this along wih `repo_policy_path` to true to set a repository policy, defaults to "false"
            set_repo_policy: true

            # requires `set_repo_policy: true`, pass in a file with the repo permissions policy
            repo_policy_path: repo-policy.json

            # Switches the default encryption AES256 to KMS
            repo_encryption_type: KMS

            # Specifies ARN of KMS key
            repo_encryption_kms_key: arn:aws:kms::123456789012:key/UUID4_OF_KMS_KEY_ID
