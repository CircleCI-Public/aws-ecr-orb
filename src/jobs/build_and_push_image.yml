description: >
  Install AWS CLI, if needed, and configure. Log into Amazon ECR
  and push image to repository. Requires environment variables
  for AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. We recommend
  these be saved in a Project (https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project)
  or in Contexts (https://circleci.com/docs/2.0/contexts).
executor: <<parameters.executor>>

parameters:
  executor:
    description: executor to use for this job
    type: executor
    default: default

  profile-name:
    description: AWS profile name to be configured.
    type: string
    default: "default"

  aws-access-key-id:
    description: >
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_ACCESS_KEY.
    type: env_var_name
    default: AWS_ACCESS_KEY_ID

  aws-secret-access-key:
    description: >
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will set to hold this
      value, i.e. AWS_SECRET_ACCESS_KEY.
    type: env_var_name
    default: AWS_SECRET_ACCESS_KEY

  region:
    description: >
      Name of env var storing your AWS region information,
      defaults to AWS_REGION
    type: env_var_name
    default: AWS_REGION

  account-url:
    type: env_var_name
    description: >
      Env var storing Amazon ECR account URL that maps to an AWS account,
      e.g. {awsAccountNum}.dkr-ecr.us-west-2.amazonaws.com
      defaults to AWS_ECR_ACCOUNT_URL
    default: AWS_ECR_ACCOUNT_URL

  repo:
    type: string
    description: A URI to an Amazon ECR repository

  create-repo:
    type: boolean
    description: Should the repo be created if it does not exist?
    default: false

  tag:
    type: string
    description: Docker tag (default = latest)
    default: "latest"

  dockerfile:
    description: Name of dockerfile to use. Defaults to Dockerfile.
    type: string
    default: Dockerfile

  path:
    description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).
    type: string
    default: .

  extra-build-args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ""

  after_checkout:
    description: Optional steps to run after checking out the code.
    type: steps
    default: []

  before_build:
    description: Optional steps to run before building the docker image.
    type: steps
    default: []

  after_build:
    description: Optional steps to run after building the docker image.
    type: steps
    default: []

steps:
  - aws-cli/install

  - aws-cli/configure:
      profile-name: << parameters.profile-name >>
      aws-access-key-id: << parameters.aws-access-key-id >>
      aws-secret-access-key: << parameters.aws-secret-access-key >>
      aws-region: << parameters.region >>

  - checkout

  - when:
      name: Run after_checkout lifecycle hook steps.
      condition: << parameters.after_checkout >>
      steps: << parameters.after_checkout >>

  - ecr-login:
      region: << parameters.region >>

  - when:
      name: Run before_build lifecycle hook steps.
      condition: << parameters.before_build >>
      steps: << parameters.before_build >>

  - build-image:
      account-url: << parameters.account-url >>
      repo: << parameters.repo >>
      tag: << parameters.tag >>
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      extra-build-args: << parameters.extra-build-args >>

  - when:
      name: Run after_build lifecycle hook steps.
      condition: << parameters.after_build >>
      steps: << parameters.after_build >>

  - when:
      condition: <<parameters.create-repo>>
      steps:
        - run: aws --region $<<parameters.region>> ecr create-repository --repository-name <<parameters.repo>> --profile <<parameters.profile-name>>

  - push-image:
      account-url: << parameters.account-url >>
      repo: << parameters.repo >>
      tag: << parameters.tag >>
